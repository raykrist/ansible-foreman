---
- name: Foreman setup tasks
  hosts: "admin"

  vars:
    foreman_auth: &foreman_auth
      username: "{{ foreman_username }}"
      password: "{{ foreman_password }}"
      server_url: "{{ foreman_server_url }}"
      validate_certs: "{{ foreman_validate_certs | default('true') }}"

## First stage: initial setup

  tasks:

  - name: "Debug global parameters"
    debug:
      msg: "{{ item.name }}"
    loop: "{{ [foreman_global_parameter, foreman_override_global_parameter | default([{}])] |
              community.general.lists_mergeby('name',
                                              recursive=true,
                                              list_merge='prepend_rp') }}"
    loop_control:
      label: "{{ item.name }} => {{ item.value }}"

  - name: Set Global Parameters
    theforeman.foreman.global_parameter:
      <<: *foreman_auth
      state: "{{ item.state | default('present') }}"
      parameter_type: "{{ item.parameter_type | default(omit) }}"
      name: "{{ item.name }}"
      value: "{{ item.value | mandatory }}"
    loop: "{{ [foreman_global_parameter, foreman_override_global_parameter | default([{}])] |
              community.general.lists_mergeby('name',
                                              recursive=true,
                                              list_merge='prepend_rp') }}"
    loop_control:
      label: "{{ item.name }} => {{ item.value }}"
    tags: global_paramenter

#  - name: Sync os templates from git repo
#    theforeman.foreman.templates_import:
#      <<: *foreman_auth
#      repo: "{{ foreman_template_repo }}"
#      branch: "{{ foreman_template_branch }}"
#      prefix: "{{ foreman_template_prefix }}"
#      associate: "{{ foreman_template_associate }}"
#      locations: "{{ foreman_locations | default('Default Location') }}"
#      organizations: "{{ foreman_organizations | default('Default Organization') }}"
#    tags: templates_import

  - name: "Setup partition table templates"
    theforeman.foreman.partition_table:
      <<: *foreman_auth
      layout: '{{ lookup("file", item) }}'
      os_family: "Redhat"
    with_fileglob:
       - "{{ inventory_dir }}/files/partition_tables_templates/*.erb"
    tags: partition_table

  - name: Setup installation medium
    theforeman.foreman.installation_medium:
      <<: *foreman_auth
      name: "{{ item.name | mandatory }}"
      path: "{{ item.path | mandatory }}"
      os_family: "{{ item.os_family | default(omit) }}"
      state: "{{ item.state | default('present') }}"
    loop: "{{ foreman_installation_medium | default([]) }}"
    loop_control:
      label: "{{ item.name }} => {{ item.path }}"
    tags: installation_medium

  - name: Setup puppet environments
    theforeman.foreman.puppet_environment:
      <<: *foreman_auth
      name: "{{ item.name | mandatory }}"
      locations: "{{ foreman_locations | default('Default Location') }}"
      organizations: "{{ foreman_organizations | default('Default Organization') }}"
      state: "{{ item.state | default('present') }}"
    loop: "{{ foreman_puppet_environments | default([]) }}"
    loop_control:
      label: "{{ item.name }}"

## Second stage: roles

- name: Foreman setup roles ()
  hosts: "admin"
  gather_facts: no
  roles:
    - role: theforeman.foreman.settings
    - role: theforeman.foreman.domains
    - role: theforeman.foreman.subnets
    - role: theforeman.foreman.operatingsystems
      ignore_errors: "{{ ansible_check_mode }}"
    - role: theforeman.foreman.hostgroups
      ignore_errors: "{{ ansible_check_mode }}"

      ## Third stage: templates and compute

- name: Foreman templates tasks
  hosts: "admin"
  gather_facts: no
  tasks:

  - name: "Setup provisioning snippet templates"
    theforeman.foreman.provisioning_template:
      <<: *foreman_auth
      template: '{{ lookup("file", item) }}'
      operatingsystems: "{{ ('provisioning_templates' in item) | ternary([el7_latest, el8_latest], omit) }}"
    with_fileglob:
       - "{{ inventory_dir }}/files/provisioning_templates/*.erb"
       - "{{ inventory_dir }}/files/snippet/*.erb"
    tags: provisioning_template

  - name: "Create OS template association"
    theforeman.foreman.os_default_template:
      <<: *foreman_auth
      operatingsystem: "{{ item.operatingsystem }}"
      template_kind: "{{ item.template_kind }}"
      provisioning_template: "{{ item.provisioning_templateÂ }}"
      state: "{{ item.state | default('present') }}"
    loop: "{{ foreman_os_default_templates | default([]) }}"
    loop_control:
      label: "{{ item.operatingsystem }} => {{ item.provisioning_template }}"
    ignore_errors: "{{ ansible_check_mode }}"
    tags: os_default_template

  - name: "Setup compute resources"
    theforeman.foreman.compute_resource:
      <<: *foreman_auth
      name: "{{ item.name | mandatory }}"
      provider: "{{ item.provider | default('libvirt') }}"
      provider_params:
        url: "{{ item.url | default('qemu+tcp://' ~ item.name ~ '/system') }}"
        display_type: "{{ item.display_type | default('vnc') }}"
      state: "{{ item.state | default('present') }}"
    loop: "{{ foreman_compute_resource | default([]) }}"
    loop_control:
      label: "{{ item.name }}"
    ignore_errors: "{{ ansible_check_mode }}"
    tags: compute_resource

  - name: "Setup compute profiles [This will fail if foreman or libvirt on controller is down]"
    theforeman.foreman.compute_profile:
      <<: *foreman_auth
      name: "{{ item[0].name }}"
      compute_attributes:
        - compute_resource: "{{ item[1].name }}"
          vm_attrs:
            cores: "{{ item[0].vm_attrs.cores | mandatory }}"
            memory: "{{ item[0].vm_attrs.memory | mandatory }}"
            sockets: "{{ item[0].vm_attrs.sockets | default(1) }}"
            interfaces_attributes: "{{ item[0].vm_attrs.interfaces_attributes | mandatory }}"
            volumes_attributes: "{{ item[0].vm_attrs.volumes_attributes | mandatory }}"
      state: "{{ item[0].state | default('present') }}"
    loop: "{{ foreman_compute_profile | product(foreman_compute_resource) | list }}"
    loop_control:
      label: "{{ item[1].name ~ ' => ' ~ item[0].name }}"
    ignore_errors: true
    tags: compute_profile
